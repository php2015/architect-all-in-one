{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observer/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["export function isFunction(val) {\n  return typeof val === \"function\"\n}\n\nexport function isObject(val) {\n  return typeof val === \"object\" && val !== null\n}\n","import { isObject } from \"../utils\"\n\n/**\n * vue2会对对象进行遍历，将每个属性 用defineProperty 重新定义 性能差\n * defineReactive 是一个包装 内部就是使用 \n * @param {*} data \n * @param {*} key \n * @param {*} value \n */\nfunction defineReactive(data, key, value) {\n  /**\n   * 你看这很显然就是一个递归的操作，发现对象里面嵌套对象\n   * 还是可以进一步的做响应式的处理 \n   */\n  observe(value)\n  Object.defineProperty(data, key, {\n    get() {\n      return value\n    },\n    set(newV) {\n      /**\n       * 如果用户赋值一个新的对象 需要将这个对象进行劫持\n       */\n      observe(newV) \n      value = newV\n    },\n  })\n}\n/**\n * 对象没有类型 类有类型 使用类的话入参会在构造函数中被作为参数，接收到\n *\n */\nclass Observer {\n  constructor(data) {\n    this.work(data)\n  }\n  /**\n   * data 是一个对象 遍历对象使用object.keys \n   * 这个方法已经很常见了。返回的是一个数组 数组的所有元素\n   * 由这个对象的key组成 \n   * 划重点是所有的属性做响应式，哈哈哈，这部分一直迷糊\n   * @param {*} data \n   */\n  work(data) {\n    // console.log(Object.keys(data))  [\"name\", \"showFlag\"]\n    // 这里使用object.keys不会遍历原型上的属性\n    Object.keys(data).forEach((key) => {\n      // 将对象中的每一个「属性」！！！都进行响应式处理\n      defineReactive(data, key, data[key])\n    })\n  }\n}\n\n/**\n * 这个函数接收的是 处理后的data了，还记得在initState中\n * 对data的处理吗，如果判断是函数，就拿到函数的执行结果\n * 并且使用call来绑定this指向防止迷路。\n * @param {*} data\n * @returns\n */\nexport function observe(data) {\n  // 响应式部分是针对对象来说的，如果不是对象直接略过\n  if (!isObject(data)) {\n    return\n  }\n  // 这里使用了一个类，之所以没有使用构造函数的原因是\n  // 功能比较耦合,返回的是一个实例\n  return new Observer(data)\n}\n","import { observe } from \"./observer/index.js\"\nimport { isFunction } from \"./utils\"\n\n/**\n * 初始化数据处理函数 接收的参数是vm实例了\n * 因为很多组件的实例都是需要进行初始数据的\n * @param {*} vm\n */\nexport function initState(vm) {\n  // 还记得在 init.js 中将用户传递的 options 赋值给 vm.$options\n  // 这里可以直接取出来使用了\n  const opts = vm.$options\n  if (opts.props) {\n    initProps(vm)\n  }\n  if (opts.methods) {\n    initMethod(vm)\n  }\n  if (opts.data) {\n    // 初始化data\n    initData(vm)\n  }\n  if (opts.computed) {\n    initComputed(vm)\n  }\n  if (opts.watch) {\n    initWatch(vm)\n  }\n}\n/**\n * 这个函数专门用来处理用户传递进来的data\n * 我们写过vue的都知道，这个data中一般存放的都是页面\n * 中用于显示的响应式数据 比方说一些 tableList 还是一些展示标志位\n * @param {*} vm\n */\nfunction initData(vm) {\n  let data = vm.$options.data\n  // 这里使用 isFunction 工具函数判断传入的data是不是一个函数\n  // 如果是一个函数就执行这个函数，但是执行时候需要绑定vm,因为我们希望在整个执行的过程中\n  // this始终指向vm，也就是当前new出来的实例。\n  // 使用_data 和 data 做一个关联 两者使用同一份引用地址\n  data = vm._data = isFunction(data) ? data.call(vm) : data\n  \n  // vue2中会将data中的所有数据 进行数据劫持 Object.defineProperty\n  observe(data)\n}\nfunction initProps() {}\nfunction initMethod() {}\nfunction initComputed() {}\nfunction initWatch() {}\n","import { initState } from \"./state\"\n\n/**\n * 将构造函数作为参数传递进去，对构造函数进行扩展，\n * 这里使用了在构造函数的原型上进行扩展的方式，所有的组件实例均可以共享\n * 表示在vue的基础上做一次混合操作 \n * 这种设计思想也是非常值得借鉴的。\n * @param {*} Vue \n */\nexport function initMixin(Vue) {\n  // 扩展原型上的方法\n  Vue.prototype._init = function (options) {\n    // 原型方法中的this指向实例 所有的实例 都具有这些方法\n    // 这里用vm表示this的引用比较方便识别。假设在这个函数中\n    // 直接有一个函数声明，函数声明中的this就不好说是谁了。\n    // 但是可以在函数中使用vm,这个就特别类似于 var that = this 那种写法\n    const vm = this\n    // 用户传递进来的选项挂载到上面,我们能够操作 vm.$options\n    vm.$options = options\n    // 初始化状态 为什么要有这个 函数 不仅仅是 有watch\n    // 还有computed props data 我们需要有一个统一的函数\n    // 来处理这些参数。\n    initState(vm)\n  }\n}\n","import { initMixin } from \"./init\"\n\n/**\n * 接收一个option作为参数 是一个对象\n * 这个options就是用户传递进来的配置选项\n * 这个配置选项中包含 data el watch computed methods。。。\n * 一些列的参数，在使用vue-cli脚手架进行开发的时候\n * 都是单组件文件 每个组件本质上都是一个实例\n * @param {*} options \n */\nfunction Vue(options) {\n  // options 为用户传入的选项\n  this._init(options) // 初始化操作\n}\n\n// 只要加载了index.js 这个文件下面的函数都会执行\ninitMixin(Vue)\n\n// 将vue导出\nexport default Vue\n"],"names":["isFunction","val","isObject","defineReactive","data","key","value","observe","Object","defineProperty","get","set","newV","Observer","work","keys","forEach","initState","vm","opts","$options","props","methods","initData","computed","watch","_data","call","initMixin","Vue","prototype","_init","options"],"mappings":"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"}