{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observer/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["export function isFunction(val) {\n  return typeof val === \"function\"\n}\n\nexport function isObject(val) {\n  return typeof val === \"object\" && val !== null\n}\n","import { isObject } from \"../utils\"\n\n// 对象没有类型 类有类型\nclass Observer {\n  constructor(data) {\n    this.work(data)\n  }\n  work(data) {\n    // 这里使用object.keys 不会遍历原型上的属性\n    Object.keys(data).forEach((key) => {\n      // 将对象中的每一个属性都进行响应式处理\n      defineReactive(data, key, data[key])\n    })\n  }\n}\n\n// vue2会对对象进行遍历，将每个属性 用defineProperty 重新定义 性能差\nfunction defineReactive(data, key, value) { \n  observe(value) // 对象嵌套对象处理\n  Object.defineProperty(data, key, {\n    get() {\n      return value\n    },\n    set(newV) {\n      observe(newV) // 如果用户赋值一个新的对象 需要将这个对象进行劫持\n      value = newV\n    },\n  })\n}\n\nexport function observe(data) {\n  // 响应式部分是针对对象来说的，如果不是对象直接略过\n  if (!isObject(data)) {\n    return\n  }\n  // 这里使用了一个类，之所以没有使用构造函数的原因是\n  // 功能比较耦合\n  return new Observer(data)\n}\n","import { observe } from \"./observer/index.js\"\nimport { isFunction } from \"./utils\"\n\nexport function initState(vm) {\n  const opts = vm.$options\n  if (opts.props) {\n    initProps(vm)\n  }\n  if (opts.methods) {\n    initMethod(vm)\n  }\n  if (opts.data) {\n    // 初始化data\n    initData(vm)\n  }\n  if (opts.computed) {\n    initComputed(vm)\n  }\n  if (opts.watch) {\n    initWatch(vm)\n  }\n}\nfunction initProps() {}\nfunction initMethod() {}\nfunction initData(vm) {\n  let data = vm.$options.data\n  // 这里使用 isFunction 工具函数判断传入的data是不是一个函数\n  // 如果是一个函数就执行这个函数，但是执行时候需要绑定vm,我们希望在整个执行的过程中\n  // this使用执行vm 也就是当前new出来的实例。\n  // 使用_data 和 data 做一个关联 两者使用同一份地址\n  data = vm._data = isFunction(data) ? data.call(vm) : data\n  // vue2中会将data中的所有数据 进行数据劫持 Object.defineProperty\n  observe(data)\n}\nfunction initComputed() {}\nfunction initWatch() {}\n","import { initState } from \"./state\"\n\n/**\n * 将构造函数通过参数传递进去\n * 表示在vue的基础上做一次混合操作 \n * 这里参数是vue也是很好理解呀\n * 最终都是想要在vue上做混合操作\n * @param {*} Vue \n */\nexport function initMixin(Vue) {\n  // 扩展原型上的方法\n  Vue.prototype._init = function (options) {\n    // 原型方法中的this指向实例 所有的实例 都具有这些方法\n    const vm = this\n    // 用户传递进来的选项挂载到上面,我们能够操作 vm.$options\n    vm.$options = options\n    // 初始化状态 为什么要有这个 函数 不仅仅是 有watch\n    // 还有computed props data 我们需要有一个统一的函数\n    // 来处理这些参数。\n    initState(vm)\n  }\n}\n","import { initMixin } from \"./init\"\n\n// 接收一个对象作为参数\nfunction Vue(options) {\n  // options 为用户传入的选项\n  this._init(options) // 初始化操作\n}\n\n// 只要加载了index.js 这个文件下面的函数都会执行\ninitMixin(Vue)\n\n// 将vue导出\nexport default Vue\n"],"names":["isFunction","val","isObject","Observer","data","work","Object","keys","forEach","key","defineReactive","value","observe","defineProperty","get","set","newV","initState","vm","opts","$options","props","methods","initData","computed","watch","_data","call","initMixin","Vue","prototype","_init","options"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAO,SAASA,UAAT,CAAoBC,GAApB,EAAyB;EAC9B,SAAO,OAAOA,GAAP,KAAe,UAAtB;EACD;EAEM,SAASC,QAAT,CAAkBD,GAAlB,EAAuB;EAC5B,SAAO,QAAOA,GAAP,MAAe,QAAf,IAA2BA,GAAG,KAAK,IAA1C;EACD;;MCHKE;EACJ,oBAAYC,IAAZ,EAAkB;EAAA;;EAChB,SAAKC,IAAL,CAAUD,IAAV;EACD;;;;aACD,cAAKA,IAAL,EAAW;EACT;EACAE,MAAAA,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBI,OAAlB,CAA0B,UAACC,GAAD,EAAS;EACjC;EACAC,QAAAA,cAAc,CAACN,IAAD,EAAOK,GAAP,EAAYL,IAAI,CAACK,GAAD,CAAhB,CAAd;EACD,OAHD;EAID;;;;;;;EAIH,SAASC,cAAT,CAAwBN,IAAxB,EAA8BK,GAA9B,EAAmCE,KAAnC,EAA0C;EACxCC,EAAAA,OAAO,CAACD,KAAD,CAAP,CADwC;;EAExCL,EAAAA,MAAM,CAACO,cAAP,CAAsBT,IAAtB,EAA4BK,GAA5B,EAAiC;EAC/BK,IAAAA,GAD+B,iBACzB;EACJ,aAAOH,KAAP;EACD,KAH8B;EAI/BI,IAAAA,GAJ+B,eAI3BC,IAJ2B,EAIrB;EACRJ,MAAAA,OAAO,CAACI,IAAD,CAAP,CADQ;;EAERL,MAAAA,KAAK,GAAGK,IAAR;EACD;EAP8B,GAAjC;EASD;;EAEM,SAASJ,OAAT,CAAiBR,IAAjB,EAAuB;EAC5B;EACA,MAAI,CAACF,QAAQ,CAACE,IAAD,CAAb,EAAqB;EACnB;EACD,GAJ2B;EAM5B;;;EACA,SAAO,IAAID,QAAJ,CAAaC,IAAb,CAAP;EACD;;ECnCM,SAASa,SAAT,CAAmBC,EAAnB,EAAuB;EAC5B,MAAMC,IAAI,GAAGD,EAAE,CAACE,QAAhB;;EACA,MAAID,IAAI,CAACE,KAAT,EAAgB;;EAGhB,MAAIF,IAAI,CAACG,OAAT,EAAkB;;EAGlB,MAAIH,IAAI,CAACf,IAAT,EAAe;EACb;EACAmB,IAAAA,QAAQ,CAACL,EAAD,CAAR;EACD;;EACD,MAAIC,IAAI,CAACK,QAAT,EAAmB;;EAGnB,MAAIL,IAAI,CAACM,KAAT,EAAgB;EAGjB;;EAGD,SAASF,QAAT,CAAkBL,EAAlB,EAAsB;EACpB,MAAId,IAAI,GAAGc,EAAE,CAACE,QAAH,CAAYhB,IAAvB,CADoB;EAGpB;EACA;EACA;;EACAA,EAAAA,IAAI,GAAGc,EAAE,CAACQ,KAAH,GAAW1B,UAAU,CAACI,IAAD,CAAV,GAAmBA,IAAI,CAACuB,IAAL,CAAUT,EAAV,CAAnB,GAAmCd,IAArD,CANoB;;EAQpBQ,EAAAA,OAAO,CAACR,IAAD,CAAP;EACD;;EC/BD;EACA;EACA;EACA;EACA;EACA;EACA;;EACO,SAASwB,SAAT,CAAmBC,GAAnB,EAAwB;EAC7B;EACAA,EAAAA,GAAG,CAACC,SAAJ,CAAcC,KAAd,GAAsB,UAAUC,OAAV,EAAmB;EACvC;EACA,QAAMd,EAAE,GAAG,IAAX,CAFuC;;EAIvCA,IAAAA,EAAE,CAACE,QAAH,GAAcY,OAAd,CAJuC;EAMvC;EACA;;EACAf,IAAAA,SAAS,CAACC,EAAD,CAAT;EACD,GATD;EAUD;;EClBD,SAASW,GAAT,CAAaG,OAAb,EAAsB;EACpB;EACA,OAAKD,KAAL,CAAWC,OAAX,EAFoB;;EAGrB;;;EAGDJ,SAAS,CAACC,GAAD,CAAT;;;;;;;;"}